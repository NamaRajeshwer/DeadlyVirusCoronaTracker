{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/image4.png"],"names":["module","exports","Cards","data","comfirmed","confirmed","value","recovered","deaths","activecases","lastdate","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","duration","separator","Date","toDateString","active","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","maintainAspectRatio","animation","easing","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35e95824.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infected\":\"Cards_infected__2SBtC\",\"active\":\"Cards_active__3REUN\",\"recovered\":\"Cards_recovered__194s5\",\"deaths\":\"Cards_deaths__2pbeb\",\"container\":\"Cards_container__1nHL2\",\"Card\":\"Cards_Card__2V8VX\",\"card\":\"Cards_card__Xhop8\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\n\r\nconst Cards = (data) => {\r\n\r\ndebugger;\r\n    const comfirmed= data.data && data.data.confirmed && data.data.confirmed.value;\r\n    const recovered= data.data && data.data.recovered && data.data.recovered.value;\r\n    const deaths= data.data && data.data.deaths && data.data.deaths.value;\r\n\r\n    const Active = comfirmed - recovered;\r\n    const activecases = Active -deaths;\r\n    const lastdate= data.data && data.data.lastUpdate;\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={4} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={4} className={cx(styles.Card, styles.infected)} >\r\n                    <CardContent>\r\n    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n  \r\n    <Typography variant=\"h5\"> {comfirmed}\r\n    <CountUp start={0} duration={2.5} separator=\",\" />\r\n    </Typography>\r\n    <Typography color=\"textSecondary\" >{new Date(lastdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of infected cases of COVID-19. </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card}  xs={12} md={4}   className={cx(styles.Card, styles.active)} >\r\n                    <CardContent>\r\n    <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n  \r\n    <Typography variant=\"h5\"> {activecases}\r\n    <CountUp start={0} duration={2.5} separator=\",\" />\r\n    </Typography>\r\n    <Typography color=\"textSecondary\" >{new Date(lastdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19. </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n                <Grid item component={Card} xs={12} md={4}   className={cx(styles.Card, styles.recovered)}>\r\n                    <CardContent>\r\n    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n    <Typography variant=\"h5\">{recovered}\r\n        <CountUp  start={0} duration={2.5} separator=\",\" />\r\n    </Typography>\r\n    <Typography color=\"textSecondary\" >{new Date(lastdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19. </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card}  xs={12} md={4}  className={cx(styles.Card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n    <Typography variant=\"h5\">{deaths}\r\n    <CountUp  start={0} duration={2.5} separator=\",\" />\r\n    </Typography>\r\n    <Typography color=\"textSecondary\" >{new Date(lastdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of deaths caused by COVID-19. </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['','Infected',  'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'All Cases',             \r\n              backgroundColor: ['rgba(25, 0, 55)','rgba(0, 0, 255)',  'rgba(255, 0, 0)'],\r\n              data: ['',confirmed.value,  deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          maintainAspectRatio: true,\r\n        animation: {\r\n                    easing: 'easeInOutBack',\r\n                    duration: 2000\r\n                    },\r\n          title: { display: true, text: `Current Situation in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            backgroundColor: 'rgba(145, 192, 248, 0.863)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          \r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <label className={styles.label}> SELECT COUNTRY</label>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image4.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n        \r\n        <Chart data={data} country={country} /> \r\n        <br/>\r\n        <div className={styles.label}> This Website Developed by Nama Rajeshwer. Would you like to give any suggession please drop a mail to nama.rajeshwer@hotmail.com</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App/> ,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1DCyu\",\"label\":\"App_label__2m15S\",\"image\":\"App_image__2taGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__17Qqe\",\"label\":\"CountryPicker_label__2IWZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1g-xl\"};","module.exports = __webpack_public_path__ + \"static/media/image4.690051ed.png\";"],"sourceRoot":""}